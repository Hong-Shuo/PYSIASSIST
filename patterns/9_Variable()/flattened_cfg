digraph cluster_main {
	graph [label=main]
	subgraph cluster_mod {
		label=mod
		1 [label="block:1@2
bce_loss = nn.BCEWithLogitsLoss():Line 2
optimizer = optim.Adam(model.parameters(), lr=0.001, weight_decay=0.001):Line 3
dataloader = DataLoader(dataset_train, batch_size=256, shuffle=True,    num_workers=2):Line 5
"]
		2 [label="block:2@7
for _ in range(50)::Line 7
"]
		3 [label="block:3@9
for batch in dataloader::Line 9
"]
		5 [label="block:5@11
optimizer.zero_grad():Line 11
image_batch, tokens_batch, meta_cats_batch = batch:Line 14
inputs = image_batch.to(DEVICE), tokens_batch.to(DEVICE), meta_cats_batch.to(    DEVICE):Line 15
with torch.set_grad_enabled(True)::Line 17
"]
		7 [label="block:7@18
image_embeddings, text_embeddings, meta_preds = model(inputs):Line 18
"]
		8 [label="block:8@20
cosine_matrix = train.cosine_distance(image_embeddings, text_embeddings):Line 20
mbmr_loss = train.calculate_loss(cosine_matrix, temperature=0.025):Line 22
mbmr_loss /= image_batch.size(0):Line 23
meta_cats_loss = Variable(bce_loss(meta_preds.detach().cpu(),    meta_cats_batch), requires_grad=True):Line 24
loss = mbmr_loss + meta_cats_loss:Line 26
loss.backward():Line 27
optimizer.step():Line 28
print('Meta Category BCE Loss:', meta_cats_loss.item()):Line 30
"]
		8 -> 3
		7 -> 8
		5 -> 7
		3 -> 5 [label=<ast.Name object at 0x0000023ECE04F250>]
		3 -> 2
		2 -> 3 [label=<ast.Call object at 0x0000023ECE04F370>]
		1 -> 2
	}
}
