digraph cluster_main {
	graph [label=main]
	subgraph cluster_mod {
		label=mod
		1 [label="block:1@1
class conv_Net(nn.Module)::Line 1
conv_Net():Line 20
"]
	}
	subgraph cluster_mod_conv_Net {
		label="mod.conv_Net"
		3 [label="block:3@2
def __init__(self)::Line 2
def forward(self, x)::Line 10
"]
	}
	subgraph cluster_mod_conv_Net___init__ {
		label="mod.conv_Net.__init__"
		5 [label="block:5@3
super(conv_Net, self).__init__():Line 3
self.bn1 = nn.BatchNorm2d(3):Line 4
self.Conv1 = convNxN(3, 64, 3):Line 5
self.Conv2 = convNxN(64, 64, 3):Line 6
self.bn2 = nn.BatchNorm2d(64):Line 7
self.Conv3 = convNxN(64, 16, 1):Line 8
self.FullC = nn.Linear(in_features=2304, out_features=10):Line 9
"]
	}
	subgraph cluster_mod_conv_Net_forward {
		label="mod.conv_Net.forward"
		8 [label="block:8@11
out = activ_Function(self.Conv1(self.bn1(x))):Line 11
out = activ_Function(self.Conv2(out)):Line 12
out = F.avg_pool2d(out, (2, 2), 2, 0, False, True, 1):Line 13
out = self.bn2(activ_Function(self.Conv3(out))):Line 14
out = F.avg_pool2d(out, (2, 2), 2, 0, False, True, 1):Line 15
out = out.view(out.size(0), -1):Line 16
out = self.FullC(out):Line 17
return out:Line 18
"]
	}
}
