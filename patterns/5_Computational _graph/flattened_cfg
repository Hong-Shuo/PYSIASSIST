digraph cluster_main {
	graph [label=main]
	subgraph cluster_mod {
		label=mod
		1 [label="block:1@1
bce_loss = nn.BCEWithLogitsLoss():Line 1
optimizer = optim.Adam(model.parameters(), lr=0.001, weight_decay=0.001):Line 2
dataloader = DataLoader(dataset_train, batch_size=256, shuffle=True,    num_workers=2):Line 4
"]
		2 [label="block:2@6
for _ in range(50)::Line 6
"]
		3 [label="block:3@8
for batch in dataloader::Line 8
"]
		5 [label="block:5@10
optimizer.zero_grad():Line 10
image_batch, tokens_batch, meta_cats_batch = batch:Line 13
inputs = image_batch.to(DEVICE), tokens_batch.to(DEVICE), meta_cats_batch.to(    DEVICE):Line 14
with torch.set_grad_enabled(True)::Line 16
"]
		7 [label="block:7@17
image_embeddings, text_embeddings, meta_preds = model(inputs):Line 17
"]
		8 [label="block:8@19
cosine_matrix = train.cosine_distance(image_embeddings, text_embeddings):Line 19
mbmr_loss = train.calculate_loss(cosine_matrix, temperature=0.025):Line 21
mbmr_loss /= image_batch.size(0):Line 22
meta_cats_loss = Variable(bce_loss(meta_preds.detach().cpu(),    meta_cats_batch), requires_grad=True):Line 23
loss = mbmr_loss + meta_cats_loss:Line 25
loss.backward():Line 26
optimizer.step():Line 27
print('Meta Category BCE Loss:', meta_cats_loss.item()):Line 29
"]
		8 -> 3
		7 -> 8
		5 -> 7
		3 -> 5 [label=<ast.Name object at 0x000002639C58F250>]
		3 -> 2
		2 -> 3 [label=<ast.Call object at 0x000002639C58F370>]
		1 -> 2
	}
}
